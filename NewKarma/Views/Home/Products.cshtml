@model ReflectionIT.Mvc.Paging.PagingList<Product>
@using ReflectionIT.Mvc.Paging
@addTagHelper*,ReflectionIT.Mvc.Paging
@{
    ViewData["Title"] = "Products";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<section class="blog_area section_padding">
    <div class="container">
        <div class="row">
            <div class="col-lg-8 mb-5 mb-lg-0">
                <div class="row blog_left_sidebar">
                    <h3>@ViewBag.Message</h3>
                    @foreach (var item in Model)
                    {
                        <a class="col-md-6 padding-0px" asp-controller="Home" asp-action="ProductById" asp-route-ProductId="@item.ProductId">
                            <article class="blog_item">
                                <div id="prodimg" class="blog_item_img" style="background-image:url('/img/imgUpload/Product/@item.Img')">
                                    <span href="/Home/ProductByBrand?brandId=@item.BrandIDFK" class="blog_item_date btn_4" id="BrandBtn">@item.Brand.Title</span>
                                </div>
                                <div class="blog_details">
                                    <h2 class="d-inline-block">@item.Title</h2>
                                    <p>
                                        @{
                                            var desc = item.Description.Length > 100 ? item.Description.Substring(0, 100) + " ..." : item.Description;
                                        }
                                        @desc
                                    </p>
                                </div>
                            </article>
                        </a>
                    }
                </div>
                <nav class="blog-pagination justify-content-center d-flex">
                    @await this.Component.InvokeAsync("Pager", new { PagingList = this.Model })
                </nav>
            </div>
            <div class="col-lg-4">
                <div class="blog_right_sidebar">
                    @await Html.PartialAsync("_Aside", ViewData["Search"])
                </div>
            </div>
        </div>
    </div>
</section>
@*<div class="modal fade" id="errorCatModal">
        <div class="container">
            <div class="row">
                <div class="padding-top-bottom-120">
                    <div class="modal-dialog modal-lg">
                        <div class="modal-content">
                            <div class="modal-header bg-danger text-warning">
                                <button class="close" data-dismiss="modal">
                                    <span>&times;</span>
                                </button>
                                <h5 class="modal-title" id="addCategoryModalLabel">خطایی رخ داده</h5>
                            </div>
                            <div class="modal-body">
                                متاسفانه در حال حاضر قطعه ای در این دسته بندی مشاهده نمی شود
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="errorBrandModal">
        <div class="container">
            <div class="row">
                <div class="padding-top-bottom-120">
                    <div class="modal-dialog modal-lg">
                        <div class="modal-content">
                            <div class="modal-header bg-danger text-warning">
                                <button class="close" data-dismiss="modal">
                                    <span>&times;</span>
                                </button>
                                <h5 class="modal-title">خطایی رخ داده</h5>
                            </div>
                            <div class="modal-body">
                                متاسفانه در حال حاضر قطعه ای از این برند موجود نیست
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>*@
